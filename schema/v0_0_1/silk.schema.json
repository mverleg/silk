{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "$id": "https://silk.markv.nl/v0.0.1.json",
  "title": "Silk",
  "description": "Cross-database relational database schema format",
  "type": "object",
  "properties": {
    "silk_version": {
      "description": "The semantic version of Silk that this data schema is exported in",
      "type": "string",
      "minLength": 5,
      "maxLength": 14,
      "pattern": "^(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)$"
    },
    "db": { "$ref":  "#/definitions/db" },
    "table": { "$ref":  "#/definitions/table" }
  },
  "additionalProperties": false,
  "definitions": {
    "identifier": {
      "type": "string",
      "description": "A name of a table, column or similar in the database",
      "examples": ["Shopping_Cart", "customer_id"],
      "min_length": 1,
      "max_length": 512,
      "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$"
    },
    "database_specific": {
      "type": "object",
      "description": "Properties for the specific database, not controlled by Silk",
      "propertyNames": {
        "pattern": "^[A-Za-z][A-Za-z0-9_]*[A-Za-z0-9]?$"
      },
      "additionalProperties": true
    },
    "data_types": {
      "type": "string",
      "description": "Type of the data that can be stored in the column",
      "examples": ["text", "real(10,2)"],
      "pattern": "^(text|uint|real\\(\\d+,\\d+\\))$"
    },
    "short_types": {
      "type": "string",
      "description": "Type of the data that can be stored in the column. Expressed as a abbreviated string of 'identifier type', followed by '!' for required or '?' for optional. Other properties can only be given in the extended form",
      "examples": ["text", "real(10,2)"],
      "pattern": "^[a-zA-Z][a-zA-Z0-9_]* (text|uint|real\\(\\d+,\\d+\\))[?!]( (increment|created_timestamp|updated_timestamp))?$"
    },
    "auto_options": {
      "type": "string",
      "description": "Automatic way to fill the column",
      "examples": ["increment", "updated_timestamp"],
      "enum": ["increment", "created_timestamp", "updated_timestamp"]
    },
    "value_literal": {
      "type": "string",
      "description": "A literal column value (type is not checked by silk)",
      "examples": ["'hello world'", "42"],
      "pattern": "^('null|'[^']*'|\\d+|\\d\\.\\d+)$"
    },
    "db": {
      "name":  "A full database with multiple tables.",
      "properties": {
        "name": { "$ref": "#/definitions/identifier" },
        "description": { "type": "string" },
        "tables": {
          "description": "The tables in the database",
          "type": "array",
          "items": { "$ref": "#/definitions/table" }
        },
        "database_type": { "$ref": "#/definitions/identifier" },
        "database_specific": { "$ref": "#/definitions/database_specific" }
      },
      "additionalProperties": false
    },
    "table": {
      "name": "A single database table",
      "properties": {
        "name": { "$ref": "#/definitions/identifier" },
        "group": { "$ref": "#/definitions/identifier" },
        "description": { "type": "string" },
        "columns": {
          "type": "array",
          "items": { "$ref": "#/definitions/column" }
        },
        "primary_key": {
          "type": "array",
          "items": { "$ref": "#/definitions/identifier" },
          "minItems": 1
        },
        "references": {
          "type": "array",
          "items": { "$ref": "#/definitions/foreign_key" }
        },
        "unique_constraints": {
          "type": "array",
          "items": { "$ref": "#/definitions/unique_constraint" }
        },
        "check_constraints": {
          "type": "array",
          "items": { "$ref": "#/definitions/check_constraint" }
        },
        "database_specific": { "$ref": "#/definitions/database_specific" }
      },
      "required": ["name", "columns", "primary_key"],
      "additionalProperties": false
    },
    "column": {
      "oneOf": [
        { "$ref": "#/definitions/short_types" },
        {
          "type": "object",
          "properties": {
            "name": { "$ref": "#/definitions/identifier" },
            "type": { "$ref": "#/definitions/data_types" },
            "nullable": {
              "type": "boolean",
              "description": "Can the value be null"
            },
            "default_value":  { "$ref": "#/definitions/value_literal" },
            "auto_value": { "$ref": "#/definitions/auto_options" }
          },
          "required": ["name", "type", "nullable"],
          "additionalProperties": false
        }
      ]
    },
    "foreign_key": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "table": { "type": "string" },
        "columns": {
          "type": "object",
          "description": "The mapping of columns, from current table on the left, to target table on the right",
          "minItems": 1,
          "propertyNames": {
            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$"
          },
          "additionalProperties": { "$ref": "#/definitions/identifier" }
        }
      },
      "required": ["table", "columns"],
      "additionalProperties": false
    },
    "unique_constraint": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "columns": {
          "type": "array",
          "description": "The columns whose combination is unique",
          "minItems": 1,
          "items": { "$ref": "#/definitions/identifier" }
        }
      },
      "required": ["columns"],
      "additionalProperties": false
    },
    "check_constraint": {
      "type": "object",
      "additionalProperties": true
    }
  },
  "oneOf": [
    { "required": ["silk_version", "db"] },
    { "required": ["silk_version", "table"] }
  ]
}
